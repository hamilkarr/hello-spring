plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'hello'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

configurations {
  developmentOnly
  runtimeClasspath {
    extendsFrom developmentOnly
  }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'mysql:mysql-connector-java:8.0.33'

	// 개발 시에만 사용하는 DevTools 추가
	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Windows: 새 콘솔 2개를 띄워 연속 빌드와 bootRun을 병렬 실행
tasks.register('dev') {
    group = 'application'
    description = 'Watch & Run (Windows)'
    doLast {
        def cwd = project.projectDir.absolutePath
        // 제목은 빈 문자열로 두고, /D로 작업 디렉터리를 명시적으로 설정
        exec {
            commandLine 'cmd', '/c', 'start', '""', '/D', cwd, 'cmd', '/k', 'gradlew.bat', 'build', '-x', 'test', '--continuous'
        }
        exec {
            commandLine 'cmd', '/c', 'start', '""', '/D', cwd, 'cmd', '/k', 'gradlew.bat', 'bootRun'
        }
    }
}